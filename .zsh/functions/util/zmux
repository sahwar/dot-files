local cmd=$1 session_name=$2 session_repository="$HOME/.tmux-sessions"
local session_file="$session_repository/$session_name"
local session_dir
local script_name="tmux.zsh"

if [[ -z $session_name ]]; then
	print "Requires a session name" 2>&1
	return 1
fi

local session_template
read -d '' -r session_template << "EOF"
local vim_session_file="$session_dir/.zmux/session.vim"
local initcmd=":mksession! ${vim_session_file:q}"
if [[ -r $vim_session_file ]]; then
	initcmd=":so \"$vim_session_file\""
fi

tmux split-window -d -t $session_name -p 75 "vim \
	-c \"$initcmd\" \
	-c 'set autowriteall' \
	-c \"au VimLeave * mksession! ${vim_session_file:q}\""
EOF

case $cmd in
	open)
		if [[ ! -r "$session_file" ]]; then
			print "Session '$session_name' isn't registered" 2>&1
			return 1
		fi
		session_dir="`< \"$session_file\"`"	
		session_dir=${session_dir:a}
		if [[ ! -r "$session_dir/.zmux/$script_name" ]]; then
			print "Session '$session_name' points to inexistent location" 2>&1
			return 1
		fi
		if ! tmux has-session -t $session_name &> /dev/null; then
			(cd $session_dir; tmux new-session -d -s $session_name -n main)
			tmux set-option -t $session_name default-path $session_dir &> /dev/null
			source "$session_dir/.zmux/$script_name"
		fi
		tmux attach -t $session_name
		;;
	create)
		if [[ -d $3 ]]; then
			session_dir=${3:a}
		else
			session_dir=$PWD
		fi
		if [[ ! -r "$session_dir/.zmux/$script_name" ]]; then
			mkdir -p "$session_dir/.zmux" &> /dev/null
			echo $session_template | \
				vim - +"file $session_dir/.zmux/$script_name" +"setf zsh"
		fi
		if [[ ! -r "$session_dir/.zmux/$script_name" ]]; then
			print "Session was not created" 2>&1
			return 1
		fi
		mkdir -p "$session_repository" &> /dev/null
		if [[ ! -d "$session_repository" ]]; then
			print "Could not create '$session_repository' directory" 2>&1
			return 1
		fi
		print "$session_dir" > "$session_file"
		print "Session '$session_name' created successfully"
		;;
	rm)
		if [[ ! -r "$session_file" ]]; then
			print "Session '$session_name' doesn't exist" 2>&1
			return 1
		fi
		rm -f "$session_file"
		print "Session '$session_name' removed successfully"
		;;
	edit)
		if [[ ! -r "$session_file" ]]; then
			print "Session '$session_name' isn't registered" 2>&1
			return 1
		fi
		session_dir="`< \"$session_file\"`"	
		session_dir=${session_dir:a}
		if [[ ! -r "$session_dir/.zmux/$script_name" ]]; then
			print "Session '$session_name' points to inexistent location" 2>&1
			return 1
		fi
		vim "$session_dir/.zmux/$script_name"
		;;
	*)
		print "Requires a command (open|create|rm|edit)" 2>&1
		;;
esac
